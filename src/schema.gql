# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  access_token: String!
  user: User!
}

input ChangePasswordDto {
  currentPassword: String!
  newPassword: String!
}

"""Comment model"""
type Comment {
  """The user who wrote the comment"""
  author: User!

  """The textual content of the comment"""
  content: String!

  """The date and time the comment was created"""
  createdAt: DateTime!

  """Unique identifier for the comment"""
  id: ID!

  """Whether the comment is active and visible"""
  isActive: Boolean!

  """The post this comment belongs to"""
  post: Post!

  """The date and time the comment was last updated"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Like model, representing a user liking a post"""
type Like {
  """The date and time the like was created"""
  createdAt: DateTime!

  """Unique identifier for the like"""
  id: ID!

  """The post that was liked"""
  post: Post!

  """The user who liked the post"""
  user: User!
}

input LoginDto {
  email: String!
  password: String!
}

type Mutation {
  changePassword(input: ChangePasswordDto!): Boolean!
  deactivateAccount: Boolean!
  login(input: LoginDto!): AuthPayload!
  register(input: RegisterUserDto!): AuthPayload!
  updateProfile(input: UpdateUserDto!): User!
}

"""Post model"""
type Post {
  """The user who created the post"""
  author: User!

  """Comments on the post"""
  comments: [Comment!]

  """The number of comments on the post"""
  commentsCount: Int

  """The textual content of the post"""
  content: String!

  """The date and time the post was created"""
  createdAt: DateTime!

  """Unique identifier for the post"""
  id: ID!

  """URL of an image attached to the post"""
  imageUrl: String

  """Whether the post is active and visible"""
  isActive: Boolean!

  """Whether the post is liked by the current user"""
  isLikedByCurrentUser: Boolean

  """Likes on the post"""
  likes: [Like!]

  """The number of likes on the post"""
  likesCount: Int

  """The date and time the post was last updated"""
  updatedAt: DateTime!

  """URL of a video attached to the post"""
  videoUrl: String
}

type Query {
  me: User!
  user(id: String!): User
  users: [User!]!
}

input RegisterUserDto {
  bio: String
  email: String!
  firstName: String
  lastName: String
  password: String!
  username: String!
}

input UpdateUserDto {
  avatarUrl: String
  bio: String
  firstName: String
  isActive: Boolean
  lastName: String
}

"""User model"""
type User {
  """URL of the user avatar image"""
  avatarUrl: String

  """A short biography of the user"""
  bio: String

  """Comments made by the user"""
  comments: [Comment!]

  """The date and time the user was created"""
  createdAt: DateTime!

  """User's unique email address"""
  email: String!

  """Whether the user has verified their email address"""
  emailVerified: Boolean!

  """User's first name"""
  firstName: String

  """Users who follow this user"""
  followers: [User!]

  """The number of followers this user has"""
  followersCount: Int

  """Other users that this user follows"""
  following: [User!]

  """The number of users this user is following"""
  followingCount: Int

  """Unique identifier for the user"""
  id: ID!

  """Whether the user account is active"""
  isActive: Boolean!

  """User's last name"""
  lastName: String

  """Posts created by the user"""
  posts: [Post!]

  """The number of posts this user has created"""
  postsCount: Int

  """The date and time the user was last updated"""
  updatedAt: DateTime!

  """User's unique username"""
  username: String!
}